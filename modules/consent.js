import { replyMessage, saveToSheets } from './utils.js';

// ‡πÄ‡∏Å‡πá‡∏ö‡πÉ‡∏ô memory (‡∏á‡πà‡∏≤‡∏¢‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î)
const userConsents = new Map();

// ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡∏£‡∏π‡∏õ
const messages = {
  askConsent: `üìã ‡∏¢‡∏¥‡∏ô‡∏¢‡∏≠‡∏°‡πÉ‡∏´‡πâ‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏≤‡∏°‡∏ô‡πÇ‡∏¢‡∏ö‡∏≤‡∏¢‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏õ‡πá‡∏ô‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏±‡∏ß‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà?

‡∏û‡∏¥‡∏°‡∏û‡πå "‡∏¢‡∏¥‡∏ô‡∏¢‡∏≠‡∏°" ‡∏´‡∏£‡∏∑‡∏≠ "‡πÑ‡∏°‡πà‡∏¢‡∏¥‡∏ô‡∏¢‡∏≠‡∏°"`,

  askInfo: `‚úÖ ‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì! ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å
‡∏ä‡∏∑‡πà‡∏≠ ‡∏ô‡∏≤‡∏°‡∏™‡∏Å‡∏∏‡∏• ‡∏≠‡∏µ‡πÄ‡∏°‡∏•

‡πÄ‡∏ä‡πà‡∏ô: ‡∏™‡∏°‡∏ä‡∏≤‡∏¢ ‡πÉ‡∏à‡∏î‡∏µ somchai@email.com`,

  welcome: (name) => `‚úÖ ‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì ${name}! ‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏¢ üòä`
};

export async function handleConsent(event, userMsg, userId) {
  // ‡πÄ‡∏ä‡πá‡∏Ñ‡∏ß‡πà‡∏≤‡∏¢‡∏¥‡∏ô‡∏¢‡∏≠‡∏°‡πÅ‡∏•‡πâ‡∏ß‡∏´‡∏£‡∏∑‡∏≠‡∏¢‡∏±‡∏á
  if (userConsents.get(userId)) {
    await handleFinance(event, userMsg, userId);
    return;
  }

  // ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
  if (userConsents.get(userId) === 'collecting') {
    await processUserInfo(event, userMsg, userId);
    return;
  }

  // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö consent
  if (userMsg === '‡∏¢‡∏¥‡∏ô‡∏¢‡∏≠‡∏°') {
    userConsents.set(userId, 'collecting');
    await replyMessage(event.replyToken, messages.askInfo);
  } 
  else if (userMsg === '‡πÑ‡∏°‡πà‡∏¢‡∏¥‡∏ô‡∏¢‡∏≠‡∏°') {
    await replyMessage(event.replyToken, '‚ùå ‡∏ï‡πâ‡∏≠‡∏á‡∏¢‡∏¥‡∏ô‡∏¢‡∏≠‡∏°‡∏Å‡πà‡∏≠‡∏ô‡∏ñ‡∏∂‡∏á‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ');
  }
  else {
    await replyMessage(event.replyToken, messages.askConsent);
  }
}

async function processUserInfo(event, userMsg, userId) {
  const parts = userMsg.split(' ');
  
  if (parts.length >= 3) {
    const [firstName, lastName, email] = parts;
    
    // ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
    await saveToSheets({
      userId,
      firstName,
      lastName, 
      email,
      consent: '‡∏¢‡∏¥‡∏ô‡∏¢‡∏≠‡∏°'
    });

    userConsents.set(userId, true);
    await replyMessage(event.replyToken, messages.welcome(firstName));
  } else {
    await replyMessage(event.replyToken, '‚ùå ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å ‡∏ä‡∏∑‡πà‡∏≠ ‡∏ô‡∏≤‡∏°‡∏™‡∏Å‡∏∏‡∏• ‡∏≠‡∏µ‡πÄ‡∏°‡∏• ‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö');
  }
}

async function handleFinance(event, userMsg, userId) {
  // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏á‡∏¥‡∏ô‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô
  let reply = '‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡πÅ‡∏•‡πâ‡∏ß üòä';
  
  if (userMsg.includes('‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠')) {
    reply = '‡∏û‡∏¥‡∏°‡∏û‡πå "‡∏£‡∏≤‡∏¢‡∏£‡∏±‡∏ö", "‡∏£‡∏≤‡∏¢‡∏à‡πà‡∏≤‡∏¢" ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å';
  }
  
  await replyMessage(event.replyToken, reply);
}
