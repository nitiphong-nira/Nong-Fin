const LineManager = require('../core/line-manager');

class UserProfile {
  constructor() {
    this.userProfiles = new Map(); // ‡∏ä‡∏±‡πà‡∏ß‡∏Ñ‡∏£‡∏≤‡∏ß‡πÅ‡∏ó‡∏ô Google Sheets
  }

  async getUserProfile(userId) {
    try {
      // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ‡πÉ‡∏ô cache ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
      if (this.userProfiles.has(userId)) {
        return this.userProfiles.get(userId);
      }

      // ‡∏Ç‡∏≠‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å Line API
      const result = await LineManager.getUserProfile(userId);
      
      if (result.success) {
        const profile = {
          userId: userId,
          displayName: result.profile.displayName,
          pictureUrl: result.profile.pictureUrl,
          statusMessage: result.profile.statusMessage,
          lastUpdated: new Date()
        };
        
        // ‡πÄ‡∏Å‡πá‡∏ö‡πÉ‡∏ô cache
        this.userProfiles.set(userId, profile);
        console.log(`‚úÖ ‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå‡∏Ç‡∏≠‡∏á ${profile.displayName}`);
        return profile;
      } else {
        console.log(`‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå‡∏Ç‡∏≠‡∏á ${userId}`);
        return null;
      }
    } catch (error) {
      console.error('Error getting user profile:', error);
      return null;
    }
  }

  async saveUserProfile(userId, additionalData = {}) {
    try {
      // ‡∏Ç‡∏≠‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå‡∏à‡∏≤‡∏Å Line
      const profile = await this.getUserProfile(userId);
      
      if (profile) {
        // ‡∏£‡∏ß‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏° (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ)
        const userData = {
          ...profile,
          ...additionalData,
          savedAt: new Date()
        };
        
        console.log(`üíæ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ: ${userData.displayName}`);
        
        // TODO: ‡πÄ‡∏Å‡πá‡∏ö‡πÉ‡∏ô Google Sheets (‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏û‡∏£‡πâ‡∏≠‡∏°)
        // await this.saveToSheets(userData);
        
        return userData;
      }
      
      return null;
    } catch (error) {
      console.error('Error saving user profile:', error);
      return null;
    }
  }

  // ‡∏£‡∏±‡∏ö‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ)
  async getUserDisplayName(userId) {
    const profile = await this.getUserProfile(userId);
    return profile ? profile.displayName : '‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ';
  }

  // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
  hasUserProfile(userId) {
    return this.userProfiles.has(userId);
  }

  // ‡∏•‡πâ‡∏≤‡∏á cache (optional)
  clearCache() {
    this.userProfiles.clear();
    console.log('üßπ ‡∏•‡πâ‡∏≤‡∏á cache ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÅ‡∏•‡πâ‡∏ß');
  }
}

module.exports = UserProfile;
