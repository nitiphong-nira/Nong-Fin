const { ConsentManager } = require('../auth/consent');
const LineAPI = require('../utils/line-api');

class MessageRouter {
  constructor() {
    this.consentManager = new ConsentManager();
    this.botPaused = false;
    this.ADMIN_ID = process.env.ADMIN_LINE_ID;
  }

  async handleMessage(event) {
    const { replyToken, message, source } = event;
    const userId = source.userId;
    const userMessage = message.text;

    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á Admin
    if (userMessage === '!‡∏´‡∏¢‡∏∏‡∏î' && userId === this.ADMIN_ID) {
      this.botPaused = true;
      await LineAPI.replyMessage(replyToken, {
        type: 'text',
        text: 'üõë ‡∏ö‡∏≠‡∏ó‡∏´‡∏¢‡∏∏‡∏î‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏ä‡∏±‡πà‡∏ß‡∏Ñ‡∏£‡∏≤‡∏ß'
      });
      return;
    }

    if (userMessage === '!‡πÄ‡∏£‡∏¥‡πà‡∏°' && userId === this.ADMIN_ID) {
      this.botPaused = false;
      await LineAPI.replyMessage(replyToken, {
        type: 'text', 
        text: '‚úÖ ‡∏ö‡∏≠‡∏ó‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏õ‡∏Å‡∏ï‡∏¥'
      });
      return;
    }

    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏´‡∏¢‡∏∏‡∏î‡∏ä‡∏±‡πà‡∏ß‡∏Ñ‡∏£‡∏≤‡∏ß
    if (this.botPaused && userId !== this.ADMIN_ID) {
      await LineAPI.replyMessage(replyToken, {
        type: 'text',
        text: '‚è∏Ô∏è ‡∏ö‡∏≠‡∏ó‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏õ‡∏¥‡∏î‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏≠‡∏™‡∏±‡∏Å‡∏Ñ‡∏£‡∏π‡πà'
      });
      return;
    }

    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏¢‡∏¥‡∏ô‡∏¢‡∏≠‡∏°
    const hasConsent = await this.consentManager.checkConsent(userId);
    
    if (!hasConsent) {
      // ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏¢‡∏¥‡∏ô‡∏¢‡∏≠‡∏° - ‡∏™‡πà‡∏á PDPA Consent
      await this.consentManager.requestConsent(replyToken);
    } else {
      // ‡∏¢‡∏¥‡∏ô‡∏¢‡∏≠‡∏°‡πÅ‡∏•‡πâ‡∏ß - ‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏°‡∏ô‡∏π‡∏´‡∏£‡∏∑‡∏≠‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°
      await this.handleConsentedUser(event);
    }
  }

  async handleConsentedUser(event) {
    const { replyToken, message } = event;
    
    // ‡∏™‡πà‡∏á‡πÄ‡∏°‡∏ô‡∏π Rich Menu (Line ‡∏à‡∏∞‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡πÉ‡∏´‡πâ‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥)
    // ‡∏´‡∏£‡∏∑‡∏≠‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡∏≤‡∏° features
    await LineAPI.replyMessage(replyToken, {
      type: 'text',
      text: '‡∏¢‡∏¥‡∏ô‡∏î‡∏µ‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö! ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏°‡∏ô‡∏π‡∏î‡πâ‡∏≤‡∏ô‡∏•‡πà‡∏≤‡∏á'
    });
  }
}

module.exports = { MessageRouter };
