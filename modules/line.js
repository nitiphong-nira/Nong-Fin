import express from 'express';
import axios from 'axios';

const router = express.Router();

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡∏¢‡∏±‡∏á LINE
async function replyMessage(replyToken, message) {
  if (!process.env.CHANNEL_ACCESS_TOKEN) {
    console.warn('‚ö†Ô∏è Missing CHANNEL_ACCESS_TOKEN');
    return;
  }

  try {
    await axios.post(
      'https://api.line.me/v2/bot/message/reply',
      {
        replyToken,
        messages: [{ type: 'text', text: message }],
      },
      {
        headers: {
          'Content-Type': 'application/json',
          'Authorization': `Bearer ${process.env.CHANNEL_ACCESS_TOKEN}`,
        },
      }
    );
    console.log('‚úÖ Reply sent');
  } catch (error) {
    console.error('‚ùå LINE API error:', error.response?.data || error.message);
  }
}

// Webhook Route ‡∏´‡∏•‡∏±‡∏Å
router.post('/', async (req, res) => {
  // ‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö‡∏ó‡∏±‡∏ô‡∏ó‡∏µ
  res.status(200).json({ status: 'OK' });

  const events = req.body.events || [];
  console.log(`üì© Received ${events.length} event(s)`);

  for (const event of events) {
    try {
      if (event.type === 'message' && event.message?.type === 'text') {
        await handleMessage(event);
      }
    } catch (err) {
      console.error('‚ùå Error:', err.message);
    }
  }
});

// ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°
async function handleMessage(event) {
  const userMsg = event.message.text.trim();
  console.log(`üí¨ User: ${userMsg}`);

  // ‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö‡πÅ‡∏ö‡∏ö‡∏á‡πà‡∏≤‡∏¢‡πÜ
  await replyMessage(event.replyToken, `‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°: "${userMsg}" üëç`);
}

export default router;
